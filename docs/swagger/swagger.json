{
    "swagger": "2.0",
    "info": {
        "description": "A user system API starter.",
        "title": "GoWithWith",
        "contact": {
            "name": "Amir Irani",
            "email": "freshmanlimited@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3500",
    "basePath": "/endpoint/v1",
    "paths": {
        "/user/auth/logout": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete current session or delete special session with id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/helpers.JoiError"
                        }
                    }
                }
            }
        },
        "/user/auth/sessions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all user sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user sessions",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/helpers.JoiString"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login and get jwt session",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/structs.Authorization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/helpers.JoiError"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Create by multipart/form-data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/helpers.JoiString"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/helpers.JoiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helpers.JoiError": {
            "type": "object",
            "properties": {
                "Code": {
                    "type": "integer"
                },
                "Message": {
                    "type": "error"
                }
            }
        },
        "helpers.JoiString": {
            "type": "object",
            "properties": {
                "Code": {
                    "type": "integer"
                },
                "Message": {
                    "type": "string"
                }
            }
        },
        "models.Pagination": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "items": {
                    "type": "object",
                    "$ref": "#/definitions/models.PaginationItems"
                },
                "pages": {
                    "type": "object",
                    "$ref": "#/definitions/models.PaginationPages"
                }
            }
        },
        "models.PaginationItems": {
            "type": "object",
            "properties": {
                "begin": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PaginationPages": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrev": {
                    "type": "boolean"
                },
                "next": {
                    "type": "integer"
                },
                "prev": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "structs.Authorization": {
            "type": "object",
            "properties": {
                "authorization": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}